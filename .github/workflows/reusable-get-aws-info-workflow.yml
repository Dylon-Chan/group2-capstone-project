# reusable-get-aws-info-workflow.yml

# This workflow is named "Get AWS info" and it's triggered when it's called by another workflow.
name: Get AWS info

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      role_to_assume:
        description: "role_to_assume"
        value: ${{ jobs.job-get-aws-info.outputs.role_to_assume }}
      aws_region:
        description: "aws_region"
        value: ${{ jobs.job-get-aws-info.outputs.aws_region }}

jobs:
  # Define a job named "job-get-aws-info" that runs on the latest version of Ubuntu.
  job-get-aws-info:
    runs-on: ubuntu-latest

    # Define the outputs of this job that will be used in other workflows.
    outputs:
      role_to_assume: ${{steps.step-get-aws-info.outputs.role_to_assume}}
      aws_region: ${{steps.step-get-aws-info.outputs.aws_region}}
    steps:
      # Checkout the repository code.
      - uses: actions/checkout@v2 

      # Define a step named "Determine Environment and Set AWS Credentials." 
      - name: Determine Environment and Set AWS Credentials
        
        # Assign an ID to this step for reference
        id: step-get-aws-info 

        # This is a Bash script that determines the environment based on the branch.
        run: |
            if [[ ${{ github.ref }} == 'refs/heads/prod' ]]; then
              ENV_FILE="env_var/prod"            
            elif [[ ${{ github.ref }} == 'refs/heads/stage' ]]; then
              ENV_FILE="env_var/stage"
            else
              ENV_FILE="env_var/dev"
            fi

            # Read environment variables from the selected environment file.
            source $ENV_FILE
            
            # Print out BUILD_ENV to confirm which branch we are in.
            echo "BUILD_ENV=$BUILD_ENV" 

            # Assign values to variables.
            aws_region=$AWS_REGION
            echo "AWS_REGION=$AWS_REGION" 
            role_to_assume=$ROLE_TO_ASSUME
            echo "ROLE_TO_ASSUME=$ROLE_TO_ASSUME" 
            
            # Output the variables for later use.
            echo "role_to_assume=$role_to_assume" >> $GITHUB_OUTPUT
            echo "aws_region=$aws_region" >> $GITHUB_OUTPUT
        
        # Specify that this script should be executed using Bash.
        shell: bash
